{"version":3,"sources":["components/Counter.js","App.js","store/index.js","index.js","components/Counter.module.css"],"names":["Counter","dispatch","useDispatch","counter","useSelector","state","show","showCounter","className","classes","value","onClick","type","amount","App","initialState","store","createStore","action","ReactDOM","render","document","getElementById","module","exports"],"mappings":"8MAuCeA,EAnCC,WACd,IAAMC,EAAWC,cACXC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WACvCG,EAAOF,aAAY,SAACC,GAAD,OAAWA,EAAME,eAkB1C,OACE,uBAAMC,UAAWC,IAAQN,QAAzB,UACE,+CACCG,GAAQ,qBAAKE,UAAWC,IAAQC,MAAxB,SAAgCP,IACzC,gCACE,wBAAQQ,QArBW,WACvBV,EAAS,CAAEW,KAAM,eAoBb,uBACA,wBAAQD,QAlBU,WACtBV,EAAS,CAAEW,KAAM,WAAYC,OAAQ,MAiBjC,4BACA,wBAAQF,QAfW,WACvBV,EAAS,CAAEW,KAAM,eAcb,0BAEF,wBAAQD,QAbiB,WAC3BV,EAAS,CAAEW,KAAM,YAYf,gCCzBSE,MANf,WACE,OACE,cAAC,EAAD,K,OCHEC,EAAe,CAAEZ,QAAS,EAAGI,aAAa,GAoCjCS,EAFDC,aAhCS,WAAmC,IAAlCZ,EAAiC,uDAAzBU,EAAcG,EAAW,uCACvD,MAAoB,cAAhBA,EAAON,KACF,CACLT,QAASE,EAAMF,QAAU,EACzBI,YAAaF,EAAME,aAIH,aAAhBW,EAAON,KACF,CACLT,QAASE,EAAMF,QAAUe,EAAOL,OAChCN,YAAaF,EAAME,aAIH,cAAhBW,EAAON,KACF,CACLT,QAASE,EAAMF,QAAU,EACzBI,YAAaF,EAAME,aAIH,WAAhBW,EAAON,KACF,CACLL,aAAcF,EAAME,YACpBJ,QAASE,EAAMF,SAIZE,KCzBTc,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,U,kBCX1BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.b36250e9.chunk.js","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch({ type: 'increment' });\n  };\n\n  const increaseHandler = () => {\n    dispatch({ type: 'increase', amount: 10 });\n  };\n\n  const decrementHandler = () => {\n    dispatch({ type: 'decrement' });\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch({ type: 'toggle' });\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 10</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n\n//   toggleCounterHandler() {}\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   };\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     increment: () => dispatch({ type: 'increment' }),\n//     decrement: () => dispatch({ type: 'decrement' }),\n//   }\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import Counter from './components/Counter';\n\n\nfunction App() {\n  return (\n    <Counter />\n  );\n}\n\nexport default App;\n","import { createStore } from 'redux';\n\nconst initialState = { counter: 0, showCounter: true };\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__32NDm\",\"value\":\"Counter_value__1pseU\"};"],"sourceRoot":""}